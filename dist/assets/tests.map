{"version":3,"sources":["holiday/tests/app.jshint.js","holiday/tests/helpers/destroy-app.js","holiday/tests/helpers/destroy-app.jshint.js","holiday/tests/helpers/ember-basic-dropdown.js","holiday/tests/helpers/ember-power-select.js","holiday/tests/helpers/module-for-acceptance.js","holiday/tests/helpers/module-for-acceptance.jshint.js","holiday/tests/helpers/resolver.js","holiday/tests/helpers/resolver.jshint.js","holiday/tests/helpers/start-app.js","holiday/tests/helpers/start-app.jshint.js","holiday/tests/integration/pods/components/flickr-photo/component-test.js","holiday/tests/integration/pods/components/flickr-photo/component-test.jshint.js","holiday/tests/models/flickr-feed.jshint.js","holiday/tests/models/flickr-item.jshint.js","holiday/tests/pods/application/route.jshint.js","holiday/tests/pods/components/flickr-photo/component.jshint.js","holiday/tests/pods/components/flickr-stream/component.jshint.js","holiday/tests/pods/flickrstream/controller.jshint.js","holiday/tests/pods/flickrstream/route.jshint.js","holiday/tests/resolver.jshint.js","holiday/tests/router.jshint.js","holiday/tests/serializers/flickr-feed.jshint.js","holiday/tests/serializers/flickr-item.jshint.js","holiday/tests/test-helper.js","holiday/tests/test-helper.jshint.js","holiday/tests/unit/models/flickr-feed-test.js","holiday/tests/unit/models/flickr-feed-test.jshint.js","holiday/tests/unit/models/flickr-item-test.js","holiday/tests/unit/models/flickr-item-test.jshint.js","holiday/tests/unit/pods/application/route-test.js","holiday/tests/unit/pods/application/route-test.jshint.js","holiday/tests/unit/pods/flickrstream/controller-test.js","holiday/tests/unit/pods/flickrstream/controller-test.jshint.js","holiday/tests/unit/pods/flickrstream/route-test.js","holiday/tests/unit/pods/flickrstream/route-test.jshint.js","holiday/tests/unit/serializers/flickr-item-test.js","holiday/tests/unit/serializers/flickr-item-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('holiday/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('holiday/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('holiday/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('holiday/tests/helpers/ember-basic-dropdown', ['exports'], function (exports) {\n  exports.clickTrigger = clickTrigger;\n  exports.tapTrigger = tapTrigger;\n\n  function clickTrigger(scope) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var selector = '.ember-basic-dropdown-trigger';\n    if (scope) {\n      selector = scope + ' ' + selector;\n    }\n    var event = new window.Event('mousedown', { bubbles: true, cancelable: true, view: window });\n    Object.keys(options).forEach(function (key) {\n      return event[key] = options[key];\n    });\n    Ember.run(function () {\n      return Ember.$(selector)[0].dispatchEvent(event);\n    });\n  }\n\n  function tapTrigger(scope) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var selector = '.ember-basic-dropdown-trigger';\n    if (scope) {\n      selector = scope + ' ' + selector;\n    }\n    var touchStartEvent = new window.Event('touchstart', { bubbles: true, cancelable: true, view: window });\n    Object.keys(options).forEach(function (key) {\n      return touchStartEvent[key] = options[key];\n    });\n    Ember.run(function () {\n      return Ember.$(selector)[0].dispatchEvent(touchStartEvent);\n    });\n    var touchEndEvent = new window.Event('touchend', { bubbles: true, cancelable: true, view: window });\n    Object.keys(options).forEach(function (key) {\n      return touchEndEvent[key] = options[key];\n    });\n    Ember.run(function () {\n      return Ember.$(selector)[0].dispatchEvent(touchEndEvent);\n    });\n  }\n});","define('holiday/tests/helpers/ember-power-select', ['exports', 'ember'], function (exports, _ember) {\n  exports.nativeMouseDown = nativeMouseDown;\n  exports.nativeMouseUp = nativeMouseUp;\n  exports.triggerKeydown = triggerKeydown;\n  exports.typeInSearch = typeInSearch;\n  exports.clickTrigger = clickTrigger;\n\n  // Helpers for integration tests\n\n  function typeText(selector, text) {\n    var $selector = $(selector);\n    $selector.val(text);\n    var event = document.createEvent(\"Events\");\n    event.initEvent('input', true, true);\n    $selector[0].dispatchEvent(event);\n  }\n\n  function fireNativeMouseEvent(eventType, selectorOrDomElement) {\n    var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\n    var event = new window.Event(eventType, { bubbles: true, cancelable: true, view: window });\n    Object.keys(options).forEach(function (key) {\n      return event[key] = options[key];\n    });\n    var target = undefined;\n    if (typeof selectorOrDomElement === 'string') {\n      target = _ember['default'].$(selectorOrDomElement)[0];\n    } else {\n      target = selectorOrDomElement;\n    }\n    _ember['default'].run(function () {\n      return target.dispatchEvent(event);\n    });\n  }\n\n  function nativeMouseDown(selectorOrDomElement, options) {\n    fireNativeMouseEvent('mousedown', selectorOrDomElement, options);\n  }\n\n  function nativeMouseUp(selectorOrDomElement, options) {\n    fireNativeMouseEvent('mouseup', selectorOrDomElement, options);\n  }\n\n  function triggerKeydown(domElement, k) {\n    var oEvent = document.createEvent(\"Events\");\n    oEvent.initEvent('keydown', true, true);\n    $.extend(oEvent, {\n      view: window,\n      ctrlKey: false,\n      altKey: false,\n      shiftKey: false,\n      metaKey: false,\n      keyCode: k,\n      charCode: k\n    });\n    _ember['default'].run(function () {\n      domElement.dispatchEvent(oEvent);\n    });\n  }\n\n  function typeInSearch(text) {\n    _ember['default'].run(function () {\n      typeText('.ember-power-select-search input, .ember-power-select-trigger-multiple-input', text);\n    });\n  }\n\n  function clickTrigger(scope) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var selector = '.ember-power-select-trigger';\n    if (scope) {\n      selector = scope + ' ' + selector;\n    }\n    nativeMouseDown(selector, options);\n  }\n\n  // Helpers for acceptance tests\n\n  exports['default'] = function () {\n    var isEmberOne = _ember['default'].VERSION.match(/1\\.13/);\n\n    _ember['default'].Test.registerAsyncHelper('selectChoose', function (app, cssPath, value) {\n      var id = find(cssPath).find('.ember-power-select-trigger').attr('id').match(/ember-power-select-trigger-ember(\\d+)/)[1];\n      // If the dropdown is closed, open it\n      if (_ember['default'].$('.ember-power-select-dropdown-ember' + id).length === 0) {\n        nativeMouseDown(cssPath + ' .ember-power-select-trigger');\n        wait();\n      }\n\n      // Select the option with the given text\n      andThen(function () {\n        var potentialTargets = $('.ember-power-select-dropdown-ember' + id + ' .ember-power-select-option:contains(\"' + value + '\")').toArray();\n        var target = undefined;\n        if (potentialTargets.length > 1) {\n          target = _ember['default'].A(potentialTargets).find(function (t) {\n            return t.textContent.trim() === value;\n          }) || potentialTargets[0];\n        } else {\n          target = potentialTargets[0];\n        }\n        nativeMouseUp(target);\n      });\n    });\n\n    _ember['default'].Test.registerAsyncHelper('selectSearch', function (app, cssPath, value) {\n      var id = find(cssPath).find('.ember-power-select-trigger').attr('id').match(/ember-power-select-trigger-ember(\\d+)/)[1];\n      var isMultipleSelect = _ember['default'].$(cssPath + ' .ember-power-select-trigger-multiple-input').length > 0;\n\n      var dropdownIsClosed = _ember['default'].$('.ember-power-select-dropdown-ember' + id).length === 0;\n      if (dropdownIsClosed) {\n        nativeMouseDown(cssPath + ' .ember-power-select-trigger');\n        wait();\n      }\n\n      if (isMultipleSelect) {\n        fillIn(cssPath + ' .ember-power-select-trigger-multiple-input', value);\n        if (isEmberOne) {\n          triggerEvent(cssPath + ' .ember-power-select-trigger-multiple-input', 'input');\n        }\n      } else {\n        fillIn('.ember-power-select-search input', value);\n        if (isEmberOne) {\n          triggerEvent('.ember-power-select-dropdown-ember' + id + ' .ember-power-select-search input', 'input');\n        }\n      }\n    });\n\n    _ember['default'].Test.registerAsyncHelper('removeMultipleOption', function (app, cssPath, value) {\n      var elem = find(cssPath + ' .ember-power-select-multiple-options > li:contains(' + value + ') > .ember-power-select-multiple-remove-btn')[0];\n      try {\n        nativeMouseDown(elem);\n      } catch (e) {\n        console.warn('css path to remove btn not found');\n        throw e;\n      }\n    });\n\n    _ember['default'].Test.registerAsyncHelper('clearSelected', function (app, cssPath, value) {\n      var elem = find(cssPath + ' .ember-power-select-clear-btn')[0];\n      try {\n        nativeMouseDown(elem);\n      } catch (e) {\n        console.warn('css path to clear btn not found');\n        throw e;\n      }\n    });\n  };\n});","define('holiday/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'holiday/tests/helpers/start-app', 'holiday/tests/helpers/destroy-app'], function (exports, _qunit, _holidayTestsHelpersStartApp, _holidayTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _holidayTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _holidayTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('holiday/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('holiday/tests/helpers/resolver', ['exports', 'holiday/resolver', 'holiday/config/environment'], function (exports, _holidayResolver, _holidayConfigEnvironment) {\n\n  var resolver = _holidayResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _holidayConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _holidayConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('holiday/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('holiday/tests/helpers/start-app', ['exports', 'ember', 'holiday/app', 'holiday/config/environment'], function (exports, _ember, _holidayApp, _holidayConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _holidayConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _holidayApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('holiday/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('holiday/tests/integration/pods/components/flickr-photo/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('flickr-photo', 'Integration | Component | flickr photo', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 16\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'flickr-photo', ['loc', [null, [1, 0], [1, 16]]]]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.4.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': {\n            'name': 'missing-wrapper',\n            'problems': ['wrong-type']\n          },\n          'revision': 'Ember@2.4.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'flickr-photo', [], [], 0, null, ['loc', [null, [2, 4], [4, 21]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('holiday/tests/integration/pods/components/flickr-photo/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - integration/pods/components/flickr-photo/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/pods/components/flickr-photo/component-test.js should pass jshint.');\n  });\n});","define('holiday/tests/models/flickr-feed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flickr-feed.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flickr-feed.js should pass jshint.');\n  });\n});","define('holiday/tests/models/flickr-item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models/flickr-item.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/flickr-item.js should pass jshint.');\n  });\n});","define('holiday/tests/pods/application/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - pods/application/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/application/route.js should pass jshint.');\n  });\n});","define('holiday/tests/pods/components/flickr-photo/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - pods/components/flickr-photo/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/flickr-photo/component.js should pass jshint.');\n  });\n});","define('holiday/tests/pods/components/flickr-stream/component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - pods/components/flickr-stream/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/components/flickr-stream/component.js should pass jshint.');\n  });\n});","define('holiday/tests/pods/flickrstream/controller.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - pods/flickrstream/controller.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/flickrstream/controller.js should pass jshint.');\n  });\n});","define('holiday/tests/pods/flickrstream/route.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - pods/flickrstream/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'pods/flickrstream/route.js should pass jshint.');\n  });\n});","define('holiday/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('holiday/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('holiday/tests/serializers/flickr-feed.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flickr-feed.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flickr-feed.js should pass jshint.');\n  });\n});","define('holiday/tests/serializers/flickr-item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - serializers/flickr-item.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/flickr-item.js should pass jshint.');\n  });\n});","define('holiday/tests/test-helper', ['exports', 'holiday/tests/helpers/resolver', 'ember-qunit'], function (exports, _holidayTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_holidayTestsHelpersResolver['default']);\n});","define('holiday/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/models/flickr-feed-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flickr-feed', 'Unit | Model | flickr feed', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('holiday/tests/unit/models/flickr-feed-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flickr-feed-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flickr-feed-test.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/models/flickr-item-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flickr-item', 'Unit | Model | flickr item', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('holiday/tests/unit/models/flickr-item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/models/flickr-item-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/flickr-item-test.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/pods/application/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('holiday/tests/unit/pods/application/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/pods/application/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/pods/application/route-test.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/pods/flickrstream/controller-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('controller:flickrstream', 'Unit | Controller | flickrstream', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n});","define('holiday/tests/unit/pods/flickrstream/controller-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/pods/flickrstream/controller-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/pods/flickrstream/controller-test.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/pods/flickrstream/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:flickrstream', 'Unit | Route | flickrstream', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('holiday/tests/unit/pods/flickrstream/route-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/pods/flickrstream/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/pods/flickrstream/route-test.js should pass jshint.');\n  });\n});","define('holiday/tests/unit/serializers/flickr-item-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('flickr-item', 'Unit | Serializer | flickr item', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:flickr-item']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('holiday/tests/unit/serializers/flickr-item-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/serializers/flickr-item-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/flickr-item-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('holiday/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}